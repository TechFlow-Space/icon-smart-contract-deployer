group 'io.contractdeployer.generics'
version '0.1'

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java {
            srcDirs("src/intTest")
        }
    }
}

// for integration tests
configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestAnnotationProcessor.extendsFrom testAnnotationProcessor
    intTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    compileOnly 'foundation.icon:javaee-score-data:0.9.0'
    implementation 'foundation.icon:javaee-scorex:0.5.2'
    implementation 'com.github.sink772:javaee-tokens:0.6.2'
    implementation 'com.github.sink772:minimal-json:0.9.7'

    intTestAnnotationProcessor 'foundation.icon:javaee-score-client:0.9.0'
    intTestImplementation 'foundation.icon:javaee-score-client:0.9.0'
    intTestImplementation 'org.bouncycastle:bcprov-jdk15on:1.60'
}

optimizedJar {
    mainClassName = 'io.contractdeployer.generics.marketplace.GenericMarketPlace'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

deployJar {
    endpoints {
        berlin {
            uri = 'https://berlin.net.solidwallet.io/api/v3'
//            to = 'cxf375251adaea63962f0a4ba95a9f03313d2aa0f7';
            nid = 0x7
        }
        sejong {
            uri = 'https://sejong.net.solidwallet.io/api/v3'
            to = 'cxd032caec185828a0ed98128120ecbe0b15fb6a7a';
            nid = 0x53
        }
        lisbon {
            uri = 'https://lisbon.net.solidwallet.io/api/v3'
            to = 'cx741f273d09ab350005d235a63f519d2544171f00';
            nid = 0x2
        }
        local {
            uri = 'http://localhost:9082/api/v3'
            nid = 0x3
        }
        lisbon {
            uri = 'https://lisbon.net.solidwallet.io/api/v3'
            nid = 0x2
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
    parameters {
    }
}


test {
    useJUnitPlatform()
}

task integrationTest(type: Test, dependsOn: optimizedJar) {
    useJUnitPlatform()
    options {
            testLogging.showStandardStreams = true
            description = 'Runs integration tests.'
            group = 'verification'
            testClassesDirs = sourceSets.intTest.output.classesDirs
            classpath = sourceSets.intTest.runtimeClasspath

            systemProperty 'url', project.tasks.deployToBerlin.uri.get()
            systemProperty 'nid', project.tasks.deployToBerlin.nid.get()

            systemProperty 'scoreFilePath', project.tasks.optimizedJar.outputJarName
            project.extensions.deployJar.arguments.each { arg -> systemProperty arg.name, arg.value
        }
    }
}


